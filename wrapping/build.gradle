plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

apply from: '../build-scripts/appDeepLinkHost.gradle'

android {
    compileSdkVersion buildConfig.compileSdk
    defaultConfig {
        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
        // For robolectric in jenkins pass: -Duser.home=${env.WORKSPACE}
        // fixes: Couldn't create lock file ?/.robolectric-download-lock
        unitTests.all {
            systemProperty 'user.home', System.getProperty('user.home')
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding true
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}"
    implementation "androidx.appcompat:appcompat:${versions.appcompat}"
    implementation "androidx.activity:activity-ktx:${versions.activity}"
    implementation "androidx.core:core-ktx:${versions.core_ktx}"
    implementation "androidx.constraintlayout:constraintlayout:${versions.constraint}"
    implementation "com.google.android.material:material:${versions.material}"

    implementation "io.reactivex.rxjava2:rxjava:${versions.rxjava2}"
    implementation "io.reactivex.rxjava2:rxkotlin:${versions.rxkotlin2}"
    implementation "io.reactivex.rxjava2:rxandroid:${versions.rxandroid2}"
    implementation "com.jakewharton.rxrelay2:rxrelay:${versions.rxrelay2}"
    implementation "com.jakewharton.rxbinding3:rxbinding:${versions.rxbinding3}"

    implementation "com.google.dagger:dagger:${versions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
    compileOnly "com.squareup.inject:assisted-inject-annotations-dagger2:${versions.assist_inject}"
    kapt "com.squareup.inject:assisted-inject-processor-dagger2:${versions.assist_inject}"

    testImplementation "junit:junit:${versions.junit}"
    testImplementation "org.mockito:mockito-core:${versions.mockito}"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:${versions.mockito_ktx}"
    testImplementation "org.robolectric:robolectric:${versions.robolectric}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.coroutine_tst}"
    testImplementation "androidx.test:core:${versions.androidx_test}"
    testImplementation "androidx.test.ext:junit-ktx:${versions.junit_ktx}"
    testImplementation "androidx.test.espresso:espresso-core:${versions.espresso}"

    debugImplementation "androidx.fragment:fragment-testing:${versions.fragment_test}"
    androidTestImplementation "androidx.test.ext:junit:${versions.junit_android}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${versions.espresso}"

    api project(':wrapping-api')
    api project(':gift-api')
    implementation project(':gift-ui')
}
